- Install k8s

```
sudo apt update
sudo apt upgrade
sudo apt install software-properties-common apt-transport-https ca-certificates gnupg2 gpg sudo
swapoff -a
```

- Coment swap in /etc/fstab
```
example - #UUID=979c17a8-dc9b-474e-974a-117f41a83976 none            swap    sw              0       0
```
- add modul overlay and br_netfilter( this modul provides support for safe data and filer networks)
```
modprobe overlay -v
modprobe br_netfilter -v
```
- enable modules etc/modules 

```
echo "overlay" >> /etc/modules
echo "br_netfilter" >> /etc/modules
```
- enable ip forvarding
```
echo 1 > /proc/sys/net/ipv4/ip_forward
```
- Download public key
```
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
```
- add repo
```
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
```
- update repo and install kubelet kubeadm kubectl and hold auto update ubelet kubeadm kubectl
```
## install kubelet kubeadm kubectl
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
```
- Enable the kubelet service before running kubeadm:
```
sudo systemctl enable --now kubelet
```
## install cri-o
- export envirement
```
export KUBERNETES_VERSION=v1.29                             # version kubelet ( kubelet)
export PROJECT_PATH=prerelease:/main
```
- add CRI-O repository
```
curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/deb/Release.key |
    gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg

echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/deb/ /" |
    tee /etc/apt/sources.list.d/cri-o.list
```
- after update
```
apt update
apt install -y cri-o
```
- enable service crio
```
systemctl start crio.service
```


