---
 - name: Check admin.conf file exists.
   stat:
     path: /etc/kubernetes/admin.conf
   register: k8s_conf
 - name:
   block:
     - name: initialize the cluster
       shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint=192.168.2.14 --apiserver-advertise-address=192.168.2.4  --upload-certs >> cluster_initialized.txt
       args:
        chdir: $HOME
        creates: cluster_initialized.txt
     
     - name: generate the control plane cert key
       shell: kubeadm init phase upload-certs --upload-certs
       register: kubeadm_cert_key
     
     - name: register the cert key
       set_fact:
         control_plane_certkey: "{{ kubeadm_cert_key.stdout_lines[-1] }}"
       delegate_to: "{{ item }}"
       delegate_facts: True
       loop: "{{ groups['control'] }}"
     - debug:
         var: kubeadm_cert_key

          
     - debug:
         var: control_plane_certkey

     - name: get join command
       shell: kubeadm token create --print-join-command
       register: join_comm
    
     - debug:
         var: join_comm

     - name: set join worker
       set_fact:
         join_command: "{{ join_comm.stdout_lines[0] }}"
       delegate_to: "{{ item }}"
       delegate_facts: True
       with_items: "{{ groups['worker'] }}"

     - name: set join control
       set_fact:
         join_command: "{{ join_comm.stdout_lines[0] }}"
       delegate_to: "{{ item }}"
       delegate_facts: True
       loop: "{{ groups['control'] }}"

     - name: create .kube directory
       file:
         path: $HOME/.kube
         state: directory
         mode: 0755

     - name: copy admin.conf to user's kube config
       copy:
         src: /etc/kubernetes/admin.conf
         dest: $HOME/.kube/config
         remote_src: yes
   when: not k8s_conf.stat.exists 
 


